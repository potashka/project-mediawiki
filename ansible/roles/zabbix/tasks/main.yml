- name: Install PostgreSQL
  apt:
    name: postgresql
    state: present
    update_cache: yes

- name: Create PostgreSQL user for Zabbix
  become: true
  shell: |
    sudo -u postgres psql -tc "SELECT 1 FROM pg_roles WHERE rolname='zabbix'" | grep -q 1 || \
    sudo -u postgres psql -c "CREATE USER zabbix WITH PASSWORD 'zabbix';"
  args:
    executable: /bin/bash

- name: Create Zabbix database
  become: true
  shell: |
    sudo -u postgres psql -lqt | cut -d \| -f 1 | grep -qw zabbix || \
    sudo -u postgres createdb -O zabbix -E UTF8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8 -T template0 zabbix
  args:
    executable: /bin/bash

- name: Install Zabbix 6.0 repo
  apt:
    deb: https://repo.zabbix.com/zabbix/6.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.0-4+ubuntu20.04_all.deb
    state: present

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install Zabbix server and frontend
  apt:
    name:
      - zabbix-server-pgsql
      - zabbix-frontend-php
      - zabbix-apache-conf
      - zabbix-sql-scripts
      - zabbix-agent
    state: present

- name: Load initial Zabbix schema into DB
  become: true
  shell: |
    sudo -u postgres bash -c 'zcat /usr/share/zabbix-sql-scripts/postgresql/server.sql.gz | psql zabbix'
  args:
    executable: /bin/bash
  when: "'zabbix' in group_names"

- name: Ensure services are running
  service:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - postgresql
    - zabbix-server
    - apache2
    - zabbix-agent

- name: Create backup target directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop:
    - /opt/backups/files
    - /opt/backups/db

- name: Upload backup scripts
  copy:
    src: "{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: '0755'
  loop:
    - backup_fs.sh
    - backup_db.sh

- name: Create cron jobs for backup scripts
  cron:
    name: "Daily {{ item.name }}"
    minute: "0"
    hour: "3"
    job: "/usr/local/bin/{{ item.script }}"
  loop:
    - { name: "filesystem backup", script: "backup_fs.sh" }
    - { name: "database backup", script: "backup_db.sh" }
