# roles/mediawiki/tasks/main.yml
---
# Самодостаточная установка MediaWiki на app-нодах (Apache2 + PHP + PostgreSQL)
# ВАЖНО: install.php запускается ОДИН РАЗ на первичной ноде, затем LocalSettings.php раздаётся всем.

- name: Set MediaWiki facts (inline)
  set_fact:
    mediawiki_tarball: "https://releases.wikimedia.org/mediawiki/{{ mediawiki_version.split('.')[:2] | join('.') }}/mediawiki-{{ mediawiki_version }}.tar.gz"
    mediawiki_dir: "/var/www/mediawiki-{{ mediawiki_version }}"
    mediawiki_site_name: "Corporate Wiki"
    mediawiki_lang: "ru"
    mediawiki_admin_user: "{{ mediawiki_admin_user | default('admin') }}"
    mediawiki_admin_pass: "{{ mediawiki_admin_pass | default('ChangeMe!2025') }}"
    mediawiki_server_url: "http://{{ hostvars['nginx-lb'].ansible_host }}/"
  tags: [mediawiki]

- name: Install Apache, PHP and required modules
  apt:
    name:
      - apache2
      - libapache2-mod-php
      - wget
      - tar
      - php
      - php-intl
      - php-mbstring
      - php-xml
      - php-apcu
      - php-curl
      - php-zip
      - php-gd
      - php-ldap
      - php-pgsql
    state: present
    update_cache: yes
  tags: [mediawiki, packages]

- name: Enable Apache rewrite module
  command: a2enmod rewrite
  args:
    creates: /etc/apache2/mods-enabled/rewrite.load
  notify: Reload Apache
  tags: [mediawiki, apache]

- name: Download MediaWiki {{ mediawiki_version }}
  get_url:
    url: "{{ mediawiki_tarball }}"
    dest: /tmp/mediawiki.tar.gz
    mode: '0644'
  tags: [mediawiki, download]

- name: Create target dir
  file:
    path: "{{ mediawiki_dir }}"
    state: directory
    owner: www-data
    group: www-data
    mode: '0755'
  tags: [mediawiki, fs]

- name: Extract MediaWiki
  unarchive:
    src: /tmp/mediawiki.tar.gz
    dest: /var/www/
    remote_src: true
    creates: "{{ mediawiki_dir }}/index.php"
  tags: [mediawiki, fs]

- name: Ensure ownership on mediawiki dir
  file:
    path: "{{ mediawiki_dir }}"
    owner: www-data
    group: www-data
    recurse: true
  tags: [mediawiki, fs]

- name: Deploy Apache vhost for MediaWiki (template)
  template:
    src: apache-mediawiki.conf.j2
    dest: /etc/apache2/sites-available/mediawiki.conf
    mode: '0644'
  notify: Reload Apache
  tags: [mediawiki, apache]

- name: Enable site mediawiki
  file:
    src: /etc/apache2/sites-available/mediawiki.conf
    dest: /etc/apache2/sites-enabled/mediawiki.conf
    state: link
  notify: Reload Apache
  tags: [mediawiki, apache]

- name: Disable default Apache site
  file:
    path: /etc/apache2/sites-enabled/000-default.conf
    state: absent
  notify: Reload Apache
  tags: [mediawiki, apache]

- name: Ensure Apache is running
  service:
    name: apache2
    state: started
    enabled: true
  tags: [mediawiki, apache]

# Применяем накопившиеся reload'ы до инсталляции
- meta: flush_handlers

# Определяем "первичную" mediawiki-ноду (первая в группе)
- name: Set primary mediawiki host fact
  set_fact:
    mediawiki_primary_host: "{{ groups['mediawiki'][0] }}"
  run_once: true
  tags: [mediawiki]

# (Опционально) ждём доступности PostgreSQL мастера, чтобы install.php не упал на race
- name: Wait for PostgreSQL master to be reachable
  wait_for:
    host: "{{ master_host }}"
    port: 5432
    timeout: 60
  run_once: true
  tags: [mediawiki, db]

# === ГЕНЕРАЦИЯ LocalSettings.php — ТОЛЬКО ОДИН РАЗ, НА ПЕРВИЧНОЙ НОДЕ ===
- name: Install MediaWiki (non-interactive) -> generate LocalSettings.php (run once)
  command: >
    php {{ mediawiki_dir }}/maintenance/install.php
    --dbtype=postgres
    --dbserver={{ master_host }}
    --dbuser={{ sysadmin_user }}
    --dbpass={{ sysadmin_password }}
    --dbname={{ sysadmin_db }}
    --installdbuser={{ sysadmin_user }}
    --installdbpass={{ sysadmin_password }}
    --lang={{ mediawiki_lang }}
    --scriptpath=""
    --server="{{ mediawiki_server_url }}"
    --pass={{ mediawiki_admin_pass }}
    "{{ mediawiki_site_name }}" "{{ mediawiki_admin_user }}"
  args:
    creates: "{{ mediawiki_dir }}/LocalSettings.php"
  run_once: true
  delegate_to: "{{ mediawiki_primary_host }}"
  tags: [mediawiki, install]

# Подтверждаем, что файл создан на первичной ноде (полезно при повторных запусках)
- name: Stat LocalSettings.php on primary
  stat:
    path: "{{ mediawiki_dir }}/LocalSettings.php"
  register: localsettings_stat
  run_once: true
  delegate_to: "{{ mediawiki_primary_host }}"
  tags: [mediawiki, install]

- name: Fail if LocalSettings.php was not generated on primary
  fail:
    msg: "LocalSettings.php не найден на первичной ноде: {{ mediawiki_primary_host }}"
  when: not localsettings_stat.stat.exists
  run_once: true
  tags: [mediawiki, install]

# СЧИТАТЬ LocalSettings.php с первичной ноды
- name: Read generated LocalSettings.php from primary node
  slurp:
    src: "{{ mediawiki_dir }}/LocalSettings.php"
  register: localsettings_blob
  run_once: true
  delegate_to: "{{ mediawiki_primary_host }}"
  tags: [mediawiki, install]

# РАЗДАТЬ LocalSettings.php на все app-ноды
- name: Distribute LocalSettings.php to all app nodes
  copy:
    dest: "{{ mediawiki_dir }}/LocalSettings.php"
    content: "{{ localsettings_blob.content | b64decode }}"
    owner: www-data
    group: www-data
    mode: '0600'
  tags: [mediawiki, install]

# (На всякий) обеспечить правильные права ещё раз
- name: Secure LocalSettings.php
  file:
    path: "{{ mediawiki_dir }}/LocalSettings.php"
    owner: www-data
    group: www-data
    mode: '0600'
  tags: [mediawiki, install]
